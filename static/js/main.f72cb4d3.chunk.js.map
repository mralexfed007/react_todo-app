{"version":3,"sources":["components/TodosContext/TodosContext.jsx","components/TodoApp/TodoApp.jsx","components/TodoItem/TodoItem.jsx","filterTodos.js","components/TodosFilter/TodosFilter.jsx","components/TodoList/TodoList.jsx","App.js","index.js"],"names":["TodosContext","React","createContext","todos","setTodos","TodosProvider","children","useState","contextValue","useEffect","storage","JSON","parse","localStorage","getItem","Provider","value","TodoApp","useContext","title","completed","id","Date","todo","setTodo","onAddTodo","useCallback","e","preventDefault","trim","prev","setItem","stringify","handleChange","target","onSubmit","onChange","type","className","placeholder","TodoItem","onEdit","setOnEdit","find","searchTodo","editedTodo","setEditedTodo","textInput","useRef","resetEditInput","editTodo","newTodoList","index","findIndex","item","onKeyDownHandle","key","onCheckTodo","checked","onDeleteTodo","splice","current","focus","ClassNames","editing","onDoubleClick","onClick","ref","onKeyDown","onBlur","filterTodos","arr","param","filter","TodosFilter","path","useLocation","pathname","count","length","clearComleted","map","forEach","todoId","newTodos","selected","to","TodoList","allCompleted","useMemo","toggleAll","htmlFor","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f72cb4d3.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const TodosContext = React.createContext({\n  todos: [],\n  setTodos: () => {},\n});\n\nexport const TodosProvider = ({ children }) => {\n  const [todos, setTodos] = useState([]);\n  const contextValue = {\n    todos,\n    setTodos,\n  };\n\n  useEffect(() => {\n    const storage = JSON.parse(localStorage.getItem('todos') || '[]');\n\n    setTodos(storage);\n  }, []);\n\n  return (\n    <TodosContext.Provider value={contextValue}>\n      {children}\n    </TodosContext.Provider>\n  );\n};\n\nTodosProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import React, { useState, useContext, useCallback } from 'react';\nimport { TodosContext } from '../TodosContext';\n\nexport const TodoApp = () => {\n  const { todos, setTodos } = useContext(TodosContext);\n  const [todo, setTodo] = useState({\n    title: '',\n    completed: false,\n    id: +new Date(),\n  });\n\n  const onAddTodo = useCallback((e) => {\n    e.preventDefault();\n    if (todo.title.trim()) {\n      setTodos(prev => ([\n        ...prev,\n        { ...todo,\n          title: todo.title.trim() },\n      ]));\n      setTodo({\n        title: '',\n        completed: false,\n        id: +new Date(),\n      });\n      localStorage.setItem('todos', JSON.stringify(todos));\n    }\n  }, [todo]);\n\n  const handleChange = useCallback(({ target }) => setTodo(prev => ({\n    ...prev,\n    title: target.value,\n  })), []);\n\n  return (\n    <form\n      onSubmit={onAddTodo}\n    >\n      <input\n        value={todo.title}\n        onChange={handleChange}\n        type=\"text\"\n        className=\"new-todo\"\n        placeholder=\"What needs to be done?\"\n      />\n    </form>\n  );\n};\n","import React, { useContext, useState, useRef,\n  useCallback, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport ClassNames from 'classnames';\nimport { TodosContext } from '../TodosContext';\n\nexport const TodoItem = ({ id }) => {\n  const { todos, setTodos } = useContext(TodosContext);\n  const [onEdit, setOnEdit] = useState(false);\n  const todo = todos.find(searchTodo => searchTodo.id === id);\n  const [editedTodo, setEditedTodo] = useState(todo.title);\n  const textInput = useRef(null);\n\n  const resetEditInput = useCallback(() => {\n    setEditedTodo(todo.title);\n    setOnEdit(false);\n  }, [todo]);\n\n  const editTodo = useCallback(() => {\n    setTodos((prev) => {\n      const newTodoList = prev;\n      const index = newTodoList.findIndex(item => item.id === todo.id);\n\n      newTodoList[index].title = (editedTodo.trim())\n        ? editedTodo.trim()\n        : newTodoList[index].title;\n      resetEditInput();\n\n      return ([...newTodoList]);\n    });\n    localStorage.setItem('todos', JSON.stringify(todos));\n  }, [editedTodo]);\n\n  const onKeyDownHandle = useCallback((e) => {\n    if (e.key === 'Enter') {\n      editTodo();\n    } else if (e.key === 'Escape') {\n      resetEditInput();\n    }\n  }, [todo, editTodo]);\n\n  const onCheckTodo = useCallback(({ target }) => setTodos((prev) => {\n    const newTodoList = prev;\n    const index = newTodoList.findIndex(item => item.id === todo.id);\n\n    newTodoList[index].completed = target.checked;\n    localStorage.setItem('todos', JSON.stringify(todos));\n\n    return ([...newTodoList]);\n  }), []);\n\n  const onDeleteTodo = useCallback(() => setTodos((prev) => {\n    const newTodoList = prev;\n    const index = newTodoList.findIndex(item => item.id === todo.id);\n\n    newTodoList.splice(index, 1);\n    localStorage.setItem('todos', JSON.stringify(todos));\n\n    return ([...newTodoList]);\n  }), []);\n\n  useEffect(() => {\n    textInput.current.focus();\n  }, [onEdit]);\n\n  return (\n    <li\n      className={ClassNames({\n        completed: todo.completed,\n        editing: onEdit,\n      })}\n      onDoubleClick={() => setOnEdit(true)}\n    >\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          checked={todo.completed}\n          onChange={onCheckTodo}\n        />\n        <label>{todo.title}</label>\n        <button\n          onClick={onDeleteTodo}\n          type=\"button\"\n          className=\"destroy\"\n        />\n      </div>\n      <input\n        type=\"text\"\n        ref={textInput}\n        className=\"edit\"\n        value={editedTodo}\n        onChange={({ target }) => setEditedTodo(target.value)}\n        onKeyDown={onKeyDownHandle}\n        onBlur={() => editTodo()}\n      />\n    </li>\n  );\n};\n\nTodoItem.propTypes = {\n  id: PropTypes.number.isRequired,\n};\n","/* eslint-disable no-unreachable */\nexport const filterTodos = (arr, param) => {\n  switch (param) {\n    case '/completed':\n      return arr.filter(todo => todo.completed);\n      break;\n\n    case '/active':\n      return arr.filter(todo => !todo.completed);\n      break;\n\n    default:\n      return arr;\n      break;\n  }\n};\n","import React, { useContext, useCallback } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport ClassNames from 'classnames';\nimport { filterTodos } from '../../filterTodos';\nimport { TodosContext } from '../TodosContext';\n\nexport const TodosFilter = () => {\n  const path = useLocation().pathname;\n  const { todos, setTodos } = useContext(TodosContext);\n\n  const count = filterTodos(todos, '/active').length;\n\n  const filtersArr = [\n    ['All', '/'],\n    ['Active', '/active'],\n    ['Completed', '/completed'],\n  ];\n\n  const clearComleted = useCallback(() => {\n    const completedTodos = filterTodos(todos, '/completed')\n      .map(todo => todo.id);\n\n    completedTodos.forEach((todoId) => {\n      setTodos((prev) => {\n        const newTodos = [...prev];\n\n        const index = newTodos.findIndex(todo => todo.id === todoId);\n\n        newTodos.splice(index, 1);\n\n        return (newTodos);\n      });\n      localStorage.setItem('todos', JSON.stringify(todos));\n    });\n  }, [todos]);\n\n  return (\n    <footer className=\"footer\">\n      <span className=\"todo-count\">\n        {`${count} items left`}\n      </span>\n\n      <ul className=\"filters\">\n        {filtersArr.map(filter => (\n          <li key={filter[0]}>\n            <Link\n              className={ClassNames({\n                selected: path === filter[1],\n              })}\n              to={filter[1]}\n            >\n              {filter[0]}\n            </Link>\n          </li>\n        ))}\n      </ul>\n\n      <button\n        type=\"button\"\n        className=\"clear-completed\"\n        onClick={clearComleted}\n      >\n        Clear completed\n      </button>\n    </footer>\n  );\n};\n","import React, { useCallback, useContext, useMemo } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { TodosContext } from '../TodosContext';\nimport { TodoItem } from '../TodoItem';\nimport { TodosFilter } from '../TodosFilter';\nimport { filterTodos } from '../../filterTodos';\n\nexport const TodoList = () => {\n  const { todos, setTodos } = useContext(TodosContext);\n  const filter = useLocation().pathname;\n\n  const allCompleted = useMemo(() => (\n    todos.length === filterTodos(todos, '/completed').length\n  ), [todos]);\n  const toggleAll = useCallback(() => {\n    setTodos((prev) => {\n      let newTodos = [...prev];\n\n      newTodos = newTodos.map(todo => ({\n        ...todo,\n        completed: !allCompleted,\n      }));\n      localStorage.setItem('todos', JSON.stringify(todos));\n\n      return [...newTodos];\n    });\n  }, [todos, allCompleted]);\n\n  return (\n    <section className=\"main\">\n      <input\n        type=\"checkbox\"\n        id=\"toggle-all\"\n        className=\"toggle-all\"\n        checked={allCompleted}\n        onChange={toggleAll}\n      />\n      <label htmlFor=\"toggle-all\">Mark all as complete</label>\n      <ul className=\"todo-list\">\n        {filterTodos(todos, filter).map(todo => (\n          <TodoItem key={todo.id} id={todo.id} />\n        ))}\n      </ul>\n      {todos.length !== 0 && (<TodosFilter />)}\n    </section>\n  );\n};\n","import React from 'react';\nimport { TodoApp } from './components/TodoApp';\nimport { TodoList } from './components/TodoList';\n\nfunction App() {\n  return (\n    <section className=\"todoapp\">\n      <header className=\"header\">\n        <h1>todos</h1>\n        <TodoApp />\n      </header>\n      <TodoList />\n    </section>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { TodosProvider } from './components/TodosContext';\n\nimport './styles/index.css';\nimport './styles/todo-list.css';\nimport './styles/filters.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <TodosProvider>\n      <App />\n    </TodosProvider>\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}